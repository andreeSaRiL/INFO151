<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/Users/a.saril/2020/INFO151/data bases/LibraryDB.sqlite" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><current_tab id="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="2564"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="Customer"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Customer" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort><column index="10" mode="1"/></sort><column_widths/><filter_values><column index="1" value=""/><column index="2" value=""/><column index="10" value=""/><column index="13" value=""/></filter_values><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="InventoryItem" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort><column index="1" mode="0"/></sort><column_widths/><filter_values><column index="1" value=""/></filter_values><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="Item" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values><column index="4" value=""/></filter_values><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="Loan" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values><column index="2" value=""/><column index="3" value=""/><column index="4" value=""/><column index="6" value=""/><column index="8" value=""/></filter_values><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="Media" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="sqlite_sequence" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table></browse_table_settings></tab_browse><tab_sql><sql name="Assignment2_Q1a.sql">SELECT Author, COUNT(ItemID) AS &quot;Total Items Published&quot;
FROM Item 
WHERE (Author IS NOT NULL) 
GROUP BY Author
ORDER BY &quot;Total Items Published&quot; DESC; </sql><sql name="Assignment2_Q1b.sql">SELECT MediaCode, COUNT(MediaID) AS &quot;Total Number of Authors&quot;
FROM ITEM I NATURAL JOIN Media M
WHERE Author IS NOT NULL
GROUP BY MediaCode</sql><sql name="Assignment2_Q1c.sql">SELECT DISTINCT Author AS &quot;Total Number of Authors&quot;, COUNT(InventoryItemID) AS &quot;Total Items Published&quot;
FROM ITEM IT1 NATURAL JOIN InventoryItem IT2
WHERE (Author IS NOT NULL) 
GROUP BY Author;
</sql><sql name="Assignment2_Q2a.sql">SELECT COUNT(InventoryItemID) AS &quot;Total Number of Non-Checked in Items&quot;
FROM Loan 
WHERE CheckedIn IS NULL</sql><sql name="Assignment2_Q2b.sql">SELECT C.FirstName || ' ' || C.LastName AS &quot;Full Name&quot;, IT.Title, date(L.DueDate) AS &quot;Due Date&quot;, Inv.Condition
FROM Customer C JOIN Item IT JOIN Loan L JOIN InventoryItem INV 
ON C.CustomerID = L.CustomerID AND L.InventoryItemID = INV.InventoryItemID AND INV.ItemID = IT.ItemID
WHERE L.CheckedIn IS NULL
ORDER BY &quot;Full Name&quot; ASC;</sql><sql name="Assignment2_Q3.sql">SELECT C.Gender, COUNT(DISTINCT(C.CustomerID)) AS &quot;Number of Customers&quot;, COUNT(L.OverdueFee) &quot;Number of Times Overdue&quot;,
 SUM(L.OverdueFee) &quot;Total Overdue Fee&quot;, ROUND(AVG(L.OverdueFee),2) AS &quot;Overdue Fee Per Customer&quot;
FROM Customer C JOIN Loan L 
ON C.CustomerID = L.CustomerID
GROUP BY C.Gender
ORDER BY &quot;Number of Customers&quot; DESC;</sql><sql name="Assignment2_Q4.sql">SELECT C.CustomerID, C.FirstName || ' ' || C.LastName AS &quot;Full Name&quot;, COUNT(L.LoanID) AS &quot;Number of Loans&quot;, C.Major
FROM Customer C LEFT OUTER JOIN Loan L ON C.CustomerID = L.CustomerID
WHERE C.Major LIKE '__%%' 
GROUP BY C.CustomerID
ORDER BY C.CustomerID ASC;

</sql><sql name="Assignment2_Q5a.sql">SELECT C.FirstName || ' ' || C.LastName &quot;Full Name&quot;, L.InventoryItemID
FROM Customer C JOIN Loan L
ON C.CustomerID = L.CustomerID
WHERE L.InventoryItemID IN ('3', '5');</sql><sql name="Assignment2_Q5b.sql">SELECT DISTINCT C.FirstName || ' ' || C.LastName &quot;Full Name&quot;, C.CustomerID
FROM Customer C JOIN Loan L 
ON C.CustomerID = L.CustomerID
WHERE L.InventoryItemID IN ('3', '5')
GROUP BY C.CustomerID
HAVING COUNT (C.CustomerID) = 2;</sql><sql name="Assignment2_Q5c.sql">SELECT DISTINCT C.FirstName || ' ' || C.LastName AS &quot;Full Name&quot;, C.CustomerID
FROM Customer C, Loan L
WHERE (C.CustomerID = L.CustomerID) AND (L.InventoryItemID IN ('3', '5'))
GROUP BY C.CustomerID
HAVING COUNT (C.CustomerID) = 2
ORDER BY &quot;Full Name&quot;;
</sql><sql name="Assignment2_Q6a.sql">SELECT strftime('%Y', CheckedOut) AS &quot;Year&quot;, strftime('%m', CheckedOut) AS &quot;Month&quot;, 
COUNT(LoanID) AS &quot;Number of Loans&quot;, SUM(OverdueFee) AS &quot;Monthly Overdue Fee&quot;
FROM Loan 
GROUP BY &quot;Year&quot;, &quot;Month&quot;
ORDER BY &quot;Year&quot; ASC, &quot;Month&quot; ASC;</sql><sql name="Assignment2_Q6b.sql">SELECT strftime('%Y', CheckedOut) AS &quot;Year&quot;, strftime('%m', CheckedOut) AS &quot;Month&quot;,
COUNT(LoanID) AS &quot;Number of Loans&quot;, SUM(OverdueFee) AS &quot;Monthly Overdue Fee&quot;
FROM Loan 
WHERE OverdueFee IS NOT NULL
GROUP BY &quot;Year&quot;, &quot;Month&quot;
ORDER BY &quot;Year&quot; ASC, &quot;Month&quot; ASC;</sql><current_tab id="6"/></tab_sql></sqlb_project>
